{"markdown":"# Guide\n\n- <a href=\"#axisx\">AxisX</a>\n- <a href=\"#axisy\">AxisY</a>\n- <a href=\"#legendramp\">LegendRamp</a>\n- <a href=\"#legendswatches\">LegendSwatches</a>\n\n## AxisX\n\n```js | dom\nsp.plot({\n  type: \"rect\",\n  data: [\n    { city: \"London\", month: \"Jan.\", rainfall: 18.9 },\n    { city: \"London\", month: \"Feb.\", rainfall: 28.8 },\n    { city: \"London\", month: \"Mar.\", rainfall: 39.3 },\n    { city: \"London\", month: \"Apr.\", rainfall: 81.4 },\n    { city: \"London\", month: \"May\", rainfall: 47 },\n    { city: \"London\", month: \"Jun.\", rainfall: 20.3 },\n    { city: \"London\", month: \"Jul.\", rainfall: 24 },\n    { city: \"London\", month: \"Aug.\", rainfall: 35.6 },\n    { city: \"Berlin\", month: \"Jan.\", rainfall: 12.4 },\n    { city: \"Berlin\", month: \"Feb.\", rainfall: 23.2 },\n    { city: \"Berlin\", month: \"Mar.\", rainfall: 34.5 },\n    { city: \"Berlin\", month: \"Apr.\", rainfall: 99.7 },\n    { city: \"Berlin\", month: \"May\", rainfall: 52.6 },\n    { city: \"Berlin\", month: \"Jun.\", rainfall: 35.5 },\n    { city: \"Berlin\", month: \"Jul.\", rainfall: 37.4 },\n    { city: \"Berlin\", month: \"Aug.\", rainfall: 42.4 },\n  ],\n  scales: {\n    y: { label: \"count\" },\n  },\n  guides: {\n    x: { grid: true, type: \"axisX\" }, // The default type is already axisX.\n    y: { grid: true },\n  },\n  statistics: [{ type: \"binX\", channel: \"y\", count: 5 }],\n  encodings: {\n    x: \"rainfall\",\n  },\n});\n```\n\n## AxisY\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { city: \"London\", month: \"Jan.\", rainfall: 18.9 },\n    { city: \"London\", month: \"Feb.\", rainfall: 28.8 },\n    { city: \"London\", month: \"Mar.\", rainfall: 39.3 },\n    { city: \"London\", month: \"Apr.\", rainfall: 81.4 },\n    { city: \"London\", month: \"May\", rainfall: 47 },\n    { city: \"London\", month: \"Jun.\", rainfall: 20.3 },\n    { city: \"London\", month: \"Jul.\", rainfall: 24 },\n    { city: \"London\", month: \"Aug.\", rainfall: 35.6 },\n    { city: \"Berlin\", month: \"Jan.\", rainfall: 12.4 },\n    { city: \"Berlin\", month: \"Feb.\", rainfall: 23.2 },\n    { city: \"Berlin\", month: \"Mar.\", rainfall: 34.5 },\n    { city: \"Berlin\", month: \"Apr.\", rainfall: 99.7 },\n    { city: \"Berlin\", month: \"May\", rainfall: 52.6 },\n    { city: \"Berlin\", month: \"Jun.\", rainfall: 35.5 },\n    { city: \"Berlin\", month: \"Jul.\", rainfall: 37.4 },\n    { city: \"Berlin\", month: \"Aug.\", rainfall: 42.4 },\n  ],\n  paddingLeft: 60,\n  coordinates: [{ type: \"transpose\" }, { type: \"polar\", endAngle: Math.PI }],\n  guides: {\n    x: { grid: true },\n    y: { grid: true }, // The default type is already axisY.\n  },\n  encodings: {\n    x: \"month\",\n    y: \"rainfall\",\n    fill: \"city\",\n    z: \"city\",\n  },\n});\n```\n\n## LegendRamp\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/89c20fe8-0c6f-46c8-b36b-4cb653dba8ed.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"cell\",\n    data,\n    transforms: [(data) => data.map((d) => ({ salary: d }))],\n    scales: {\n      color: { type: \"quantile\", range: [\"#eee\", \"pink\", \"red\"] },\n    },\n    coordinates: [\n      {\n        type: \"polar\",\n        innerRadius: 0.2,\n        outerRadius: 0.8,\n        startAngle: 0,\n        endAngle: (Math.PI / 2) * 3,\n      },\n    ],\n    guides: {\n      y: { display: false },\n      color: {\n        width: 250,\n        formatter: (d) => `${(d / 1000) | 0} k`,\n      },\n    },\n    paddingLeft: 10,\n    encodings: {\n      y: (_, i) => (i % 5) + 1,\n      x: (_, i) => ((i / 5) | 0) + 1,\n      fill: \"salary\",\n      stroke: \"black\",\n    },\n  });\n})();\n```\n\n## LegendSwatches\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/bd287f2c-3e2b-4d0a-8428-6a85211dce33.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"cell\",\n    data,\n    height: 640,\n    scales: {\n      color: { type: \"ordinal\" },\n      x: { padding: 0 },\n      y: { padding: 0 },\n    },\n    guides: {\n      // The default type is already legendSwatches.\n      // Set swatches' width.\n      color: { width: 30 },\n      y: { display: false },\n    },\n    coordinates: [{ type: \"polar\" }],\n    encodings: {\n      x: \"x\",\n      y: \"y\",\n      fill: \"index\",\n      stroke: \"black\",\n    },\n  });\n})();\n```\n"}