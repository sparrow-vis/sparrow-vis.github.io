{"markdown":"# Work With D3\n\n- <a href=\"#d3-cloud\">d3-cloud</a>\n\n## d3-cloud\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/d345d2d7-a35d-4d27-af92-4982b3e6b213.json\"\n  );\n  const data = await response.json();\n  const words = data.flatMap((d) =>\n    d.words.map(({ weight, word }) => ({\n      value: weight,\n      text: word,\n      name: d.name,\n    }))\n  );\n\n  const width = 640;\n  const height = 480;\n\n  return await new Promise((resolve) => {\n    d3.layout\n      .cloud()\n      .size([width, height])\n      .words(words)\n      .padding(2)\n      .rotate(() => ~~(Math.random() * 2) * 90)\n      .fontSize((d) => d.value * 2)\n      .on(\"end\", (computedWords) => {\n        const chart = sp.plot({\n          data: computedWords,\n          type: \"text\",\n          width,\n          height,\n          paddingTop: 0,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          guides: {\n            x: { display: false },\n            y: { display: false },\n            color: { display: false },\n          },\n          scales: {\n            fontSize: { type: \"identity\" },\n            rotate: { type: \"identity\" },\n            y: { range: [0, 1] },\n          },\n          encodings: {\n            x: \"x\",\n            y: \"y\",\n            rotate: \"rotate\",\n            fontSize: \"size\",\n            text: \"text\",\n            fill: \"name\",\n          },\n          styles: {\n            textAnchor: \"middle\",\n          },\n        });\n        resolve(chart);\n      })\n      .start();\n  });\n})();\n```\n"}