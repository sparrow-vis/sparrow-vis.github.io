{"markdown":"# Coordinate\n\n- <a href=\"#polar\">Polar</a>\n- <a href=\"#transpose\">Transpose</a>\n- <a href=\"#mix\">Mix</a>\n\n## Polar\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  coordinates: [{ type: \"polar\" }],\n  guides: { y: { display: false } },\n  paddingLeft: 10,\n  encodings: {\n    x: \"genre\",\n    y: \"sold\",\n    fill: \"genre\",\n  },\n});\n```\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  transforms: [\n    (data) => {\n      const sum = data.reduce((total, d) => total + d.sold, 0);\n      return data.map(({ genre, sold }) => ({ genre, sold: sold / sum }));\n    },\n  ],\n  coordinates: [{ type: \"transpose\" }, { type: \"polar\" }],\n  statistics: [{ type: \"stackY\" }],\n  paddingLeft: 10,\n  scales: {\n    x: { padding: 0 },\n  },\n  guides: {\n    x: { display: false },\n    y: { display: false },\n  },\n  encodings: {\n    y: \"sold\",\n    fill: \"genre\",\n  },\n});\n```\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { city: \"London\", month: \"Jan.\", rainfall: 18.9 },\n    { city: \"London\", month: \"Feb.\", rainfall: 28.8 },\n    { city: \"London\", month: \"Mar.\", rainfall: 39.3 },\n    { city: \"London\", month: \"Apr.\", rainfall: 81.4 },\n    { city: \"London\", month: \"May\", rainfall: 47 },\n    { city: \"London\", month: \"Jun.\", rainfall: 20.3 },\n    { city: \"London\", month: \"Jul.\", rainfall: 24 },\n    { city: \"London\", month: \"Aug.\", rainfall: 35.6 },\n    { city: \"Berlin\", month: \"Jan.\", rainfall: 12.4 },\n    { city: \"Berlin\", month: \"Feb.\", rainfall: 23.2 },\n    { city: \"Berlin\", month: \"Mar.\", rainfall: 34.5 },\n    { city: \"Berlin\", month: \"Apr.\", rainfall: 99.7 },\n    { city: \"Berlin\", month: \"May\", rainfall: 52.6 },\n    { city: \"Berlin\", month: \"Jun.\", rainfall: 35.5 },\n    { city: \"Berlin\", month: \"Jul.\", rainfall: 37.4 },\n    { city: \"Berlin\", month: \"Aug.\", rainfall: 42.4 },\n  ],\n  paddingLeft: 60,\n  guides: {\n    x: { display: false },\n  },\n  statistics: [{ type: \"stackY\" }, { type: \"normalizeY\" }],\n  coordinates: [{ type: \"transpose\" }, { type: \"polar\" }],\n  encodings: {\n    x: \"month\",\n    y: \"rainfall\",\n    fill: \"city\",\n  },\n});\n```\n\n```js | dom\nsp.plot({\n  type: \"area\",\n  data: [\n    { item: \"Design\", user: \"a\", score: 70 },\n    { item: \"Design\", user: \"b\", score: 30 },\n    { item: \"Development\", user: \"a\", score: 60 },\n    { item: \"Development\", user: \"b\", score: 70 },\n    { item: \"Marketing\", user: \"a\", score: 50 },\n    { item: \"Marketing\", user: \"b\", score: 60 },\n    { item: \"Users\", user: \"a\", score: 40 },\n    { item: \"Users\", user: \"b\", score: 50 },\n    { item: \"Test\", user: \"a\", score: 60 },\n    { item: \"Test\", user: \"b\", score: 70 },\n    { item: \"Language\", user: \"a\", score: 70 },\n    { item: \"Language\", user: \"b\", score: 50 },\n    { item: \"Technology\", user: \"a\", score: 50 },\n    { item: \"Technology\", user: \"b\", score: 40 },\n    { item: \"Support\", user: \"a\", score: 30 },\n    { item: \"Support\", user: \"b\", score: 40 },\n    { item: \"Sales\", user: \"a\", score: 60 },\n    { item: \"Sales\", user: \"b\", score: 40 },\n    { item: \"UX\", user: \"a\", score: 50 },\n    { item: \"UX\", user: \"b\", score: 60 },\n  ],\n  coordinates: [{ type: \"polar\" }],\n  paddingLeft: 10,\n  guides: {\n    y: { grid: true, tickCount: 5 },\n    x: { grid: true },\n    color: { width: 50 },\n  },\n  encodings: {\n    x: \"item\",\n    y: \"score\",\n    stroke: \"user\",\n    fill: \"user\",\n  },\n  styles: {\n    fillOpacity: 0.4,\n    strokeOpacity: 0.4,\n  },\n});\n```\n\n## Transpose\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  coordinates: [{ type: \"transpose\" }],\n  paddingLeft: 80,\n  encodings: {\n    x: \"genre\",\n    y: \"sold\",\n    fill: \"genre\",\n  },\n});\n```\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { city: \"London\", month: \"Jan.\", rainfall: 18.9 },\n    { city: \"London\", month: \"Feb.\", rainfall: 28.8 },\n    { city: \"London\", month: \"Mar.\", rainfall: 39.3 },\n    { city: \"London\", month: \"Apr.\", rainfall: 81.4 },\n    { city: \"London\", month: \"May\", rainfall: 47 },\n    { city: \"London\", month: \"Jun.\", rainfall: 20.3 },\n    { city: \"London\", month: \"Jul.\", rainfall: 24 },\n    { city: \"London\", month: \"Aug.\", rainfall: 35.6 },\n    { city: \"Berlin\", month: \"Jan.\", rainfall: 12.4 },\n    { city: \"Berlin\", month: \"Feb.\", rainfall: 23.2 },\n    { city: \"Berlin\", month: \"Mar.\", rainfall: 34.5 },\n    { city: \"Berlin\", month: \"Apr.\", rainfall: 99.7 },\n    { city: \"Berlin\", month: \"May\", rainfall: 52.6 },\n    { city: \"Berlin\", month: \"Jun.\", rainfall: 35.5 },\n    { city: \"Berlin\", month: \"Jul.\", rainfall: 37.4 },\n    { city: \"Berlin\", month: \"Aug.\", rainfall: 42.4 },\n  ],\n  paddingLeft: 60,\n  guides: {\n    y: { grid: true, formatter: d => Math.abs(d) },\n  },\n  coordinates: [{ type: \"transpose\" }],\n  encodings: {\n    x: \"month\",\n    y: (d) => (d.city === \"London\" ? d.rainfall : -d.rainfall),\n    fill: \"city\",\n  },\n});\n```\n\n## Mix\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  coordinates: [{ type: \"transpose\" }, { type: \"polar\", endAngle: Math.PI }],\n  scales: { x: { padding: 0 } },\n  paddingLeft: 10,\n  encodings: {\n    x: \"genre\",\n    y: \"sold\",\n    fill: \"genre\",\n  },\n});\n```\n"}