{"markdown":"# Rough Renderer\n\nRender chart in a sketch-handy style.\n\n## Rough Interval\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  renderer: r2.createPlugin(),\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  encodings: {\n    x: \"genre\",\n    y: \"sold\",\n    fill: \"genre\",\n  },\n});\n```\n\n## Rough Cell\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/bd287f2c-3e2b-4d0a-8428-6a85211dce33.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"cell\",\n    data,\n    renderer: r2.createPlugin(),\n    height: 640,\n    scales: {\n      color: { type: \"ordinal\" },\n    },\n    guides: {\n      color: { width: 30 },\n    },\n    encodings: {\n      x: \"x\",\n      y: \"y\",\n      fill: \"index\",\n      stroke: \"black\",\n    },\n  });\n})();\n```\n\n## Rough Line\n\n```js | dom\nsp.plot({\n  type: \"line\",\n  renderer: r2.createPlugin(),\n  data: [\n    { month: \"Jan\", city: \"Tokyo\", temperature: 7 },\n    { month: \"Jan\", city: \"London\", temperature: 3.9 },\n    { month: \"Feb\", city: \"Tokyo\", temperature: 6.9 },\n    { month: \"Feb\", city: \"London\", temperature: 4.2 },\n    { month: \"Mar\", city: \"Tokyo\", temperature: 9.5 },\n    { month: \"Mar\", city: \"London\", temperature: 5.7 },\n    { month: \"Apr\", city: \"Tokyo\", temperature: 14.5 },\n    { month: \"Apr\", city: \"London\", temperature: 8.5 },\n    { month: \"May\", city: \"Tokyo\", temperature: 18.4 },\n    { month: \"May\", city: \"London\", temperature: 11.9 },\n    { month: \"Jun\", city: \"Tokyo\", temperature: 21.5 },\n    { month: \"Jun\", city: \"London\", temperature: 15.2 },\n    { month: \"Jul\", city: \"Tokyo\", temperature: 25.2 },\n    { month: \"Jul\", city: \"London\", temperature: 17 },\n    { month: \"Aug\", city: \"Tokyo\", temperature: 26.5 },\n    { month: \"Aug\", city: \"London\", temperature: 16.6 },\n    { month: \"Sep\", city: \"Tokyo\", temperature: 23.3 },\n    { month: \"Sep\", city: \"London\", temperature: 14.2 },\n    { month: \"Oct\", city: \"Tokyo\", temperature: 18.3 },\n    { month: \"Oct\", city: \"London\", temperature: 10.3 },\n    { month: \"Nov\", city: \"Tokyo\", temperature: 13.9 },\n    { month: \"Nov\", city: \"London\", temperature: 6.6 },\n    { month: \"Dec\", city: \"Tokyo\", temperature: 9.6 },\n    { month: \"Dec\", city: \"London\", temperature: 4.8 },\n  ],\n  scales: { y: { label: \"temp\" } },\n  encodings: {\n    x: \"month\",\n    y: \"temperature\",\n    stroke: \"city\",\n  },\n});\n```\n\n## Rough Point\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/antvdemo/assets/data/bubble.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"point\",\n    data,\n    renderer: r2.createPlugin(),\n    scales: {\n      y: { domain: [60, 85], label: \"Life\" },\n      r: {\n        range: [4, 45],\n        interpolate: (t, a, b) => Math.sqrt(a * a * (1 - t) + b * b * t),\n      },\n    },\n    encodings: {\n      x: \"GDP\",\n      y: \"LifeExpectancy\",\n      r: \"Population\",\n      fill: \"continent\",\n      stroke: \"continent\",\n    },\n    styles: {\n      fillOpacity: 0.8,\n    },\n  });\n})();\n```\n\n## Rough Area\n\n```js | dom\nsp.plot({\n  type: \"area\",\n  renderer: r2.createPlugin(),\n  data: [\n    { country: \"Europe\", year: \"1750\", value: 163 },\n    { country: \"Europe\", year: \"1800\", value: 203 },\n    { country: \"Europe\", year: \"1850\", value: 276 },\n    { country: \"Europe\", year: \"1900\", value: 628 },\n    { country: \"Europe\", year: \"1950\", value: 547 },\n    { country: \"Europe\", year: \"1999\", value: 729 },\n    { country: \"Europe\", year: \"2050\", value: 408 },\n    { country: \"Oceania\", year: \"1750\", value: 200 },\n    { country: \"Oceania\", year: \"1800\", value: 200 },\n    { country: \"Oceania\", year: \"1850\", value: 200 },\n    { country: \"Oceania\", year: \"1900\", value: 460 },\n    { country: \"Oceania\", year: \"1950\", value: 230 },\n    { country: \"Oceania\", year: \"1999\", value: 300 },\n    { country: \"Oceania\", year: \"2050\", value: 300 },\n    { country: \"Africa\", year: \"1750\", value: 106 },\n    { country: \"Africa\", year: \"1800\", value: 107 },\n    { country: \"Africa\", year: \"1850\", value: 111 },\n    { country: \"Africa\", year: \"1900\", value: 1766 },\n    { country: \"Africa\", year: \"1950\", value: 221 },\n    { country: \"Africa\", year: \"1999\", value: 767 },\n    { country: \"Africa\", year: \"2050\", value: 133 },\n    { country: \"Asia\", year: \"1750\", value: 502 },\n    { country: \"Asia\", year: \"1800\", value: 635 },\n    { country: \"Asia\", year: \"1850\", value: 809 },\n    { country: \"Asia\", year: \"1900\", value: 5268 },\n    { country: \"Asia\", year: \"1950\", value: 4400 },\n    { country: \"Asia\", year: \"1999\", value: 3634 },\n    { country: \"Asia\", year: \"2050\", value: 947 },\n  ],\n  guides: {\n    y: { grid: true },\n  },\n  statistics: [{ type: \"stackY\" }, { type: \"symmetryY\" }],\n  encodings: {\n    x: \"year\",\n    y: \"value\",\n    fill: \"country\",\n  },\n  styles: {\n    fillOpacity: 0.8,\n  },\n});\n```\n\n## Rough Path\n\n```js | dom\n(() => {\n  const svg = sp.plot({\n    type: \"path\",\n    renderer: r2.createPlugin(),\n    data: [\n      {\n        d: \"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9 23.5 23.2 38.1 55.4 38.1 91v112.5c0.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\",\n      },\n    ],\n    width: 512,\n    height: 512,\n    encodings: {\n      d: \"d\",\n    },\n    styles: {\n      fill: \"black\",\n    },\n  });\n  svg.setAttribute(\"viewBox\", [0, 0, 1024, 1024]);\n  return svg;\n})();\n```\n\n## Rough Mix\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/b45f3425-04bc-454a-8edd-26a0b4fc28d6.json\"\n  );\n  const data = await response.json();\n  const month = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  return sp.plot({\n    type: \"layer\",\n    data,\n    width: 800,\n    statistics: [{ type: \"stackY\" }],\n    renderer: r2.createPlugin(),\n    encodings: {\n      y: \"profit\",\n      x: (d) => month[d.month],\n      fill: \"territory\",\n    },\n    scales: {\n      x: { type: \"band\", padding: 0.5 },\n    },\n    guides: {\n      color: { width: 80, formatter: (d) => d.split(\" \").pop() },\n      y: { formatter: (d) => `${(d / 1000) | 0}k` },\n    },\n    children: [\n      {\n        type: \"area\",\n        styles: {\n          fillOpacity: 0.7,\n        },\n      },\n      {\n        type: \"interval\",\n      },\n    ],\n  });\n})();\n```\n"}