{"markdown":"# View Composition\n\n- <a href=\"#layer\">Layer</a>\n- <a href=\"#flex\">Flex</a>\n- <a href=\"#facet\">Facet</a>\n\n## Layer\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/b45f3425-04bc-454a-8edd-26a0b4fc28d6.json\"\n  );\n  const data = await response.json();\n  const month = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  return sp.plot({\n    type: \"layer\",\n    data,\n    width: 800,\n    statistics: [{ type: \"stackY\" }],\n    encodings: {\n      y: \"profit\",\n      x: (d) => month[d.month],\n      fill: \"territory\",\n    },\n    scales: {\n      x: { type: \"band\", padding: 0.5 },\n    },\n    guides: {\n      color: { width: 80, formatter: (d) => d.split(\" \").pop() },\n      y: { formatter: (d) => `${(d / 1000) | 0}k` },\n    },\n    children: [\n      {\n        type: \"area\",\n        styles: {\n          fillOpacity: 0.7,\n        },\n      },\n      {\n        type: \"interval\",\n      },\n    ],\n  });\n})();\n```\n\n```js | dom\nsp.plot({\n  type: \"layer\",\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  encodings: {\n    x: \"genre\",\n    y: \"sold\",\n  },\n  children: [\n    { type: \"interval\", fill: \"genre\" },\n    {\n      type: \"text\",\n      encodings: { text: \"sold\", fontSize: 20 },\n      styles: {\n        dy: \"-0.5em\",\n        dx: \"1.5em\",\n      },\n    },\n  ],\n});\n```\n\n```js | dom\nsp.plot({\n  type: \"layer\",\n  encodings: {\n    x: \"month\",\n    y: \"temperature\",\n    stroke: \"city\",\n  },\n  data: [\n    { month: \"Jan\", city: \"Tokyo\", temperature: 7 },\n    { month: \"Jan\", city: \"London\", temperature: 3.9 },\n    { month: \"Feb\", city: \"Tokyo\", temperature: 6.9 },\n    { month: \"Feb\", city: \"London\", temperature: 4.2 },\n    { month: \"Mar\", city: \"Tokyo\", temperature: 9.5 },\n    { month: \"Mar\", city: \"London\", temperature: 5.7 },\n    { month: \"Apr\", city: \"Tokyo\", temperature: 14.5 },\n    { month: \"Apr\", city: \"London\", temperature: 8.5 },\n    { month: \"May\", city: \"Tokyo\", temperature: 18.4 },\n    { month: \"May\", city: \"London\", temperature: 11.9 },\n    { month: \"Jun\", city: \"Tokyo\", temperature: 21.5 },\n    { month: \"Jun\", city: \"London\", temperature: 15.2 },\n    { month: \"Jul\", city: \"Tokyo\", temperature: 25.2 },\n    { month: \"Jul\", city: \"London\", temperature: 17 },\n    { month: \"Aug\", city: \"Tokyo\", temperature: 26.5 },\n    { month: \"Aug\", city: \"London\", temperature: 16.6 },\n    { month: \"Sep\", city: \"Tokyo\", temperature: 23.3 },\n    { month: \"Sep\", city: \"London\", temperature: 14.2 },\n    { month: \"Oct\", city: \"Tokyo\", temperature: 18.3 },\n    { month: \"Oct\", city: \"London\", temperature: 10.3 },\n    { month: \"Nov\", city: \"Tokyo\", temperature: 13.9 },\n    { month: \"Nov\", city: \"London\", temperature: 6.6 },\n    { month: \"Dec\", city: \"Tokyo\", temperature: 9.6 },\n    { month: \"Dec\", city: \"London\", temperature: 4.8 },\n  ],\n  scales: { y: { nice: true, label: \"temp\" } },\n  children: [\n    { type: \"line\" },\n    {\n      type: \"point\",\n      encodings: {\n        fill: \"city\",\n      },\n    },\n  ],\n});\n```\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/9ae12ce8-8590-4bc4-b906-68c593cc460d.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"layer\",\n    data,\n    children: [\n      {\n        type: \"rect\",\n        guides: {\n          x: { display: false },\n          y: { display: false },\n          color: { display: false },\n        },\n        encodings: {\n          x: \"x\",\n          y: \"y\",\n          x1: \"x1\",\n          y1: \"y1\",\n          fill: \"name\",\n        },\n      },\n      {\n        type: \"text\",\n        encodings: {\n          x: (d) => (d.x + d.x1) / 2,\n          y: (d) => (d.y + d.y1) / 2,\n          text: \"name\",\n        },\n        styles: {\n          dy: \"0.5em\",\n          textAnchor: \"middle\",\n        },\n      },\n    ],\n  });\n})();\n```\n\n## Flex\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/antvdemo/assets/data/scatter.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"row\",\n    data,\n    scales: {\n      y: { label: \"count\" },\n    },\n    padding: 10,\n    width: 900,\n    children: [\n      {\n        type: \"rect\",\n        paddingTop: 30,\n        statistics: [{ type: \"binX\", channel: \"y\" }],\n        encodings: {\n          x: \"height\",\n        },\n        paddingRight: 0,\n      },\n      {\n        type: \"rect\",\n        paddingTop: 30,\n        statistics: [{ type: \"binX\", channel: \"y\" }],\n        encodings: {\n          x: \"weight\",\n        },\n      },\n    ],\n  });\n})();\n```\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/antvdemo/assets/data/scatter.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"col\",\n    data,\n    scales: {\n      y: { label: \"count\" },\n    },\n    padding: 20,\n    height: 640,\n    children: [\n      {\n        type: \"rect\",\n        paddingTop: 30,\n        statistics: [{ type: \"binX\", channel: \"y\" }],\n        encodings: {\n          x: \"height\",\n        },\n        paddingBottom: 0,\n      },\n      {\n        type: \"rect\",\n        paddingTop: 30,\n        statistics: [{ type: \"binX\", channel: \"y\" }],\n        encodings: {\n          x: \"weight\",\n        },\n      },\n    ],\n  });\n})();\n```\n\n```js | dom\nsp.plot({\n  type: \"row\",\n  width: 840,\n  height: 600,\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  flex: [1.2, 1],\n  padding: 10,\n  children: [\n    {\n      type: \"interval\",\n      paddingRight: 0,\n      encodings: {\n        x: \"genre\",\n        y: \"sold\",\n        fill: \"steelblue\",\n      },\n    },\n    {\n      type: \"col\",\n      guides: {\n        x: { display: false },\n        y: { display: false },\n        color: { label: \"Genre\" },\n      },\n      encodings: {\n        y: \"sold\",\n        fill: \"genre\",\n      },\n      children: [\n        {\n          type: \"interval\",\n          paddingLeft: 0,\n          coordinates: [{ type: \"polar\" }],\n          encodings: { x: \"genre\" },\n        },\n        {\n          type: \"interval\",\n          paddingLeft: 0,\n          coordinates: [{ type: \"transpose\" }, { type: \"polar\" }],\n          statistics: [{ type: \"stackY\" }],\n          transforms: [\n            (data) => {\n              const sum = data.reduce((total, d) => total + d.sold, 0);\n              return data.map(({ genre, sold }) => ({\n                genre,\n                sold: sold / sum,\n              }));\n            },\n          ],\n          scales: {\n            x: { padding: 0 },\n          },\n        },\n      ],\n    },\n  ],\n});\n```\n\n## Facet\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/49cfe4c4-192c-40c5-ad2c-133342c8b8c5.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    type: \"facet\",\n    data,\n    encodings: {\n      y: \"sex\",\n    },\n    paddingBottom: 0,\n    height: 600,\n    scales: {\n      y: { label: null },\n    },\n    children: [\n      {\n        type: \"rect\",\n        data,\n        transforms: [(data) => data.filter((d) => d.height)],\n        statistics: [{ type: \"binX\", channel: \"y\" }],\n        scales: {\n          y: { label: \"count\" },\n          color: { domain: [\"male\", \"female\"] },\n        },\n        encodings: {\n          x: \"height\",\n          fill: \"sex\",\n        },\n      },\n    ],\n  });\n})();\n```\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/antvdemo/assets/data/diamond.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    data,\n    type: \"facet\",\n    width: 860,\n    height: 860,\n    encodings: {\n      x: \"cut\",\n      y: \"clarity\",\n    },\n    scales: {\n      x: { label: null },\n      y: { label: null },\n    },\n    padding: 15,\n    paddingTop: 10,\n    children: [\n      {\n        type: \"point\",\n        data,\n        encodings: {\n          x: \"carat\",\n          y: \"price\",\n        },\n        paddingTop: 0,\n        paddingRight: 0,\n        guides: {\n          x: { tickCount: 3 },\n          y: { tickCount: 3 },\n        },\n      },\n    ],\n  });\n})();\n```\n"}