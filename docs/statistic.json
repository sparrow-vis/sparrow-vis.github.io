{"markdown":"# Statistic\n\nChange the position of geometries.\n\n## StackY\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { city: \"London\", month: \"Jan.\", rainfall: 18.9 },\n    { city: \"London\", month: \"Feb.\", rainfall: 28.8 },\n    { city: \"London\", month: \"Mar.\", rainfall: 39.3 },\n    { city: \"London\", month: \"Apr.\", rainfall: 81.4 },\n    { city: \"London\", month: \"May\", rainfall: 47 },\n    { city: \"London\", month: \"Jun.\", rainfall: 20.3 },\n    { city: \"London\", month: \"Jul.\", rainfall: 24 },\n    { city: \"London\", month: \"Aug.\", rainfall: 35.6 },\n    { city: \"Berlin\", month: \"Jan.\", rainfall: 12.4 },\n    { city: \"Berlin\", month: \"Feb.\", rainfall: 23.2 },\n    { city: \"Berlin\", month: \"Mar.\", rainfall: 34.5 },\n    { city: \"Berlin\", month: \"Apr.\", rainfall: 99.7 },\n    { city: \"Berlin\", month: \"May\", rainfall: 52.6 },\n    { city: \"Berlin\", month: \"Jun.\", rainfall: 35.5 },\n    { city: \"Berlin\", month: \"Jul.\", rainfall: 37.4 },\n    { city: \"Berlin\", month: \"Aug.\", rainfall: 42.4 },\n  ],\n  paddingLeft: 60,\n  guides: {\n    y: { grid: true },\n  },\n  statistics: [{ type: \"stackY\" }],\n  encodings: {\n    x: \"month\",\n    y: \"rainfall\",\n    fill: \"city\",\n  },\n});\n```\n\n```js | dom\nsp.plot({\n  type: \"area\",\n  data: [\n    { country: \"Europe\", year: \"1750\", value: 163 },\n    { country: \"Europe\", year: \"1800\", value: 203 },\n    { country: \"Europe\", year: \"1850\", value: 276 },\n    { country: \"Europe\", year: \"1900\", value: 628 },\n    { country: \"Europe\", year: \"1950\", value: 547 },\n    { country: \"Europe\", year: \"1999\", value: 729 },\n    { country: \"Europe\", year: \"2050\", value: 408 },\n    { country: \"Oceania\", year: \"1750\", value: 200 },\n    { country: \"Oceania\", year: \"1800\", value: 200 },\n    { country: \"Oceania\", year: \"1850\", value: 200 },\n    { country: \"Oceania\", year: \"1900\", value: 460 },\n    { country: \"Oceania\", year: \"1950\", value: 230 },\n    { country: \"Oceania\", year: \"1999\", value: 300 },\n    { country: \"Oceania\", year: \"2050\", value: 300 },\n    { country: \"Africa\", year: \"1750\", value: 106 },\n    { country: \"Africa\", year: \"1800\", value: 107 },\n    { country: \"Africa\", year: \"1850\", value: 111 },\n    { country: \"Africa\", year: \"1900\", value: 1766 },\n    { country: \"Africa\", year: \"1950\", value: 221 },\n    { country: \"Africa\", year: \"1999\", value: 767 },\n    { country: \"Africa\", year: \"2050\", value: 133 },\n    { country: \"Asia\", year: \"1750\", value: 502 },\n    { country: \"Asia\", year: \"1800\", value: 635 },\n    { country: \"Asia\", year: \"1850\", value: 809 },\n    { country: \"Asia\", year: \"1900\", value: 5268 },\n    { country: \"Asia\", year: \"1950\", value: 4400 },\n    { country: \"Asia\", year: \"1999\", value: 3634 },\n    { country: \"Asia\", year: \"2050\", value: 947 },\n  ],\n  guides: {\n    y: { grid: true },\n  },\n  statistics: [{ type: \"stackY\" }],\n  encodings: {\n    x: \"year\",\n    y: \"value\",\n    fill: \"country\",\n  },\n  styles: {\n    fillOpacity: 0.8,\n  },\n});\n```\n\n## NormalizeY\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { city: \"London\", month: \"Jan.\", rainfall: 18.9 },\n    { city: \"London\", month: \"Feb.\", rainfall: 28.8 },\n    { city: \"London\", month: \"Mar.\", rainfall: 39.3 },\n    { city: \"London\", month: \"Apr.\", rainfall: 81.4 },\n    { city: \"London\", month: \"May\", rainfall: 47 },\n    { city: \"London\", month: \"Jun.\", rainfall: 20.3 },\n    { city: \"London\", month: \"Jul.\", rainfall: 24 },\n    { city: \"London\", month: \"Aug.\", rainfall: 35.6 },\n    { city: \"Berlin\", month: \"Jan.\", rainfall: 12.4 },\n    { city: \"Berlin\", month: \"Feb.\", rainfall: 23.2 },\n    { city: \"Berlin\", month: \"Mar.\", rainfall: 34.5 },\n    { city: \"Berlin\", month: \"Apr.\", rainfall: 99.7 },\n    { city: \"Berlin\", month: \"May\", rainfall: 52.6 },\n    { city: \"Berlin\", month: \"Jun.\", rainfall: 35.5 },\n    { city: \"Berlin\", month: \"Jul.\", rainfall: 37.4 },\n    { city: \"Berlin\", month: \"Aug.\", rainfall: 42.4 },\n  ],\n  paddingLeft: 60,\n  guides: {\n    y: { grid: true },\n  },\n  statistics: [{ type: \"stackY\" }, { type: \"normalizeY\" }],\n  encodings: {\n    x: \"month\",\n    y: \"rainfall\",\n    fill: \"city\",\n  },\n});\n```\n\n## SymmetryY\n\n```js | dom\nsp.plot({\n  type: \"area\",\n  data: [\n    { country: \"Europe\", year: \"1750\", value: 163 },\n    { country: \"Europe\", year: \"1800\", value: 203 },\n    { country: \"Europe\", year: \"1850\", value: 276 },\n    { country: \"Europe\", year: \"1900\", value: 628 },\n    { country: \"Europe\", year: \"1950\", value: 547 },\n    { country: \"Europe\", year: \"1999\", value: 729 },\n    { country: \"Europe\", year: \"2050\", value: 408 },\n    { country: \"Oceania\", year: \"1750\", value: 200 },\n    { country: \"Oceania\", year: \"1800\", value: 200 },\n    { country: \"Oceania\", year: \"1850\", value: 200 },\n    { country: \"Oceania\", year: \"1900\", value: 460 },\n    { country: \"Oceania\", year: \"1950\", value: 230 },\n    { country: \"Oceania\", year: \"1999\", value: 300 },\n    { country: \"Oceania\", year: \"2050\", value: 300 },\n    { country: \"Africa\", year: \"1750\", value: 106 },\n    { country: \"Africa\", year: \"1800\", value: 107 },\n    { country: \"Africa\", year: \"1850\", value: 111 },\n    { country: \"Africa\", year: \"1900\", value: 1766 },\n    { country: \"Africa\", year: \"1950\", value: 221 },\n    { country: \"Africa\", year: \"1999\", value: 767 },\n    { country: \"Africa\", year: \"2050\", value: 133 },\n    { country: \"Asia\", year: \"1750\", value: 502 },\n    { country: \"Asia\", year: \"1800\", value: 635 },\n    { country: \"Asia\", year: \"1850\", value: 809 },\n    { country: \"Asia\", year: \"1900\", value: 5268 },\n    { country: \"Asia\", year: \"1950\", value: 4400 },\n    { country: \"Asia\", year: \"1999\", value: 3634 },\n    { country: \"Asia\", year: \"2050\", value: 947 },\n  ],\n  guides: {\n    y: { grid: true },\n  },\n  statistics: [{ type: \"stackY\" }, { type: \"symmetryY\" }],\n  encodings: {\n    x: \"year\",\n    y: \"value\",\n    fill: \"country\",\n  },\n  styles: {\n    fillOpacity: 0.8,\n  },\n});\n```\n\n```js | dom\nsp.plot({\n  type: \"interval\",\n  data: [\n    { genre: \"Sports\", sold: 275 },\n    { genre: \"Strategy\", sold: 115 },\n    { genre: \"Action\", sold: 120 },\n    { genre: \"Shooter\", sold: 350 },\n    { genre: \"Other\", sold: 150 },\n  ],\n  paddingLeft: 60,\n  transforms: [(data) => data.sort((a, b) => b.sold - a.sold)],\n  statistics: [{ type: \"symmetryY\" }],\n  coordinates: [{ type: \"transpose\" }],\n  encodings: {\n    x: \"genre\",\n    y: \"sold\",\n  },\n});\n```\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/49cfe4c4-192c-40c5-ad2c-133342c8b8c5.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    data,\n    type: \"point\",\n    width: 800,\n    transforms: [(data) => data.filter((d) => d.height)],\n    statistics: [{ type: \"symmetryY\" }],\n    coordinates: [{ type: \"transpose\" }],\n    guides: {\n      y: { formatter: (d) => d + \"m\" },\n    },\n    paddingLeft: 120,\n    encodings: {\n      x: \"sport\",\n      y: \"height\",\n      stroke: \"sex\",\n    },\n  });\n})();\n```\n\n## BinX\n\n```js | dom\n(async () => {\n  const response = await fetch(\n    \"https://gw.alipayobjects.com/os/bmw-prod/49cfe4c4-192c-40c5-ad2c-133342c8b8c5.json\"\n  );\n  const data = await response.json();\n  return sp.plot({\n    data,\n    type: \"rect\",\n    transforms: [(data) => data.filter((d) => d.height)],\n    statistics: [{ type: \"binX\", channel: \"y\" }],\n    guides: {\n      x: { formatter: (d) => d.toFixed(1) },\n    },\n    scales: { y: { label: \"count\" } },\n    paddingTop: 30,\n    encodings: {\n      x: \"height\",\n    },\n  });\n})();\n```\n"}